<?php

// autoload_psr4.php @generated by Composer

$vendorDir = dirname(dirname(__FILE__));
$baseDir = dirname($vendorDir);

return array(
    'Symfony\\Contracts\\Service\\' => array($vendorDir . '/symfony/service-contracts'),
    'Symfony\\Contracts\\HttpClient\\' => array($vendorDir . '/symfony/http-client-contracts'),
    'Symfony\\Component\\HttpClient\\' => array($vendorDir . '/symfony/http-client'),
    'Psr\\Log\\' => array($vendorDir . '/psr/log/src'),
    'Psr\\Http\\Message\\' => array($vendorDir . '/psr/http-message/src', $vendorDir . '/psr/http-factory/src'),
    'Psr\\Container\\' => array($vendorDir . '/psr/container/src'),
    'PhpParser\\' => array($vendorDir . '/nikic/php-parser/lib/PhpParser'),
    'Partitech\\PhpMistral\\' => array($baseDir . '/src'),
    'LibDNS\\' => array($vendorDir . '/daverandom/libdns/src'),
    'League\\Uri\\' => array($vendorDir . '/league/uri-interfaces', $vendorDir . '/league/uri', $vendorDir . '/league/uri-parser/src'),
    'KnpLabs\\JsonSchema\\' => array($vendorDir . '/knplabs/php-json-schema/src'),
    'Kelunik\\Certificate\\' => array($vendorDir . '/kelunik/certificate/src'),
    'Doctrine\\Instantiator\\' => array($vendorDir . '/doctrine/instantiator/src/Doctrine/Instantiator'),
    'DeepCopy\\' => array($vendorDir . '/myclabs/deep-copy/src/DeepCopy'),
    'Amp\\WindowsRegistry\\' => array($vendorDir . '/amphp/windows-registry/lib'),
    'Amp\\Sync\\' => array($vendorDir . '/amphp/sync/src'),
    'Amp\\Socket\\' => array($vendorDir . '/amphp/socket/src'),
    'Amp\\Serialization\\' => array($vendorDir . '/amphp/serialization/src'),
    'Amp\\Process\\' => array($vendorDir . '/amphp/process/lib'),
    'Amp\\Parser\\' => array($vendorDir . '/amphp/parser/src'),
    'Amp\\Http\\Client\\' => array($vendorDir . '/amphp/http-client/src'),
    'Amp\\Http\\' => array($vendorDir . '/amphp/http/src', $vendorDir . '/amphp/hpack/src'),
    'Amp\\Dns\\' => array($vendorDir . '/amphp/dns/lib'),
    'Amp\\Cache\\' => array($vendorDir . '/amphp/cache/lib'),
    'Amp\\ByteStream\\' => array($vendorDir . '/amphp/byte-stream/lib'),
    'Amp\\' => array($vendorDir . '/amphp/amp/lib'),
);
